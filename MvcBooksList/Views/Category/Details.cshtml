@model MvcBooksList.Models.Category

@{
    ViewData["Title"] = "Details";
}


<div>
    <h4>@Html.DisplayFor(model => model.CategoryName)</h4>
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
        Edit
    </button>

    <!-- Modal -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Edit Category Name</h5>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form asp-action="UpdateCAtegoryName" method="get">
                    <div class="modal-body">

                        <input type="hidden" name="oldName" value="@Model.CategoryName" />
                        @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })


                    </div>
                    <div class="modal-footer">

                        <button type="submit" class="btn btn-primary">Save changes</button>

                    </div>
                </form>
            </div>
        </div>
    </div>
    <hr />
    <dl class="row">


        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ModifiedBy)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ModifiedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ModifiedOn)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddedBy)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddedBy)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddedOn)
        </dd>
    </dl>
</div>


@*@Html.Partial("AddSubCategory", Model.CategoryName)*@

<div class="container">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SubCategories[0].SubCategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SubCategories[0].ModifiedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SubCategories[0].ModifiedOn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SubCategories[0].AddedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SubCategories[0].AddedOn)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.SubCategories[0].CategoryName)
                    </th>*@
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sub in Model.SubCategories)
            {
                @Html.Partial("SubCategoryRow", sub)

            }
        </tbody>
    </table>


</div>


<div>
    @*@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |*@
    <a asp-action="Index">Back to List</a>
</div>
